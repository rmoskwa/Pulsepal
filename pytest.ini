[pytest]
# Pytest configuration for PulsePal testing

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Markers for test categorization
markers =
    unit: Unit tests that don't require external services
    integration: Integration tests requiring real services
    performance: Performance benchmark tests
    slow: Tests that take longer to run
    asyncio: Asynchronous tests
    skip_ci: Tests to skip in CI environment
    cli: CLI interface tests
    security: Security and SQL injection tests

# Coverage settings
addopts =
    --verbose
    --tb=short
    --strict-markers
    --asyncio-mode=auto
    --cov-config=.coveragerc

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (in seconds)
timeout = 300
timeout_method = thread

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:torch
    ignore::UserWarning:transformers

# Asyncio configuration
asyncio_default_fixture_loop_scope = function

# Environment
env =
    DISABLE_SEMANTIC_ROUTER = true
    HYBRID_SEARCH_ENABLED = true
